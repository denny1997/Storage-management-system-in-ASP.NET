@model Miao_studio.Models.input

@{
    ViewBag.Title = "Input";
}

<h2>新增入库</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <label class="control-label col-md-2">名称</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @id = "name"} })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">类别</label>
        <div class="col-md-10">
            <select id="cls" class="form-control">
                <option value="机械类">机械类</option>
                <option value="五金类">五金类</option>
                <option value="电器五金类">电器五金类</option>
                <option value="建材类">建材类</option>
                <option value="其他类">其他类</option>
            </select>
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">型号</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control", @id = "type" } })
            @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">供应商</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.provider, new { htmlAttributes = new { @class = "form-control", @id = "provider" } })
            @Html.ValidationMessageFor(model => model.provider, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">单位</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.unit, new { htmlAttributes = new { @class = "form-control", @id = "unit" } })
            @Html.ValidationMessageFor(model => model.unit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">数量</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.number, new { htmlAttributes = new { @class = "form-control", @id = "number" } })
            @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">单价</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control", @id = "price" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">签收人</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.signer, new { htmlAttributes = new { @class = "form-control", @id = "signer" } })
            @Html.ValidationMessageFor(model => model.signer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">入库日期</label>
        <div class="col-md-10">
            <input type="date" name="time" id="time" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")"/>
            @Html.ValidationMessageFor(model => model.signer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button class="btn btn-default" onclick="return check();">添加</button>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("返回", "Index")
</div>

<script>
    function check() {
        var regPos = /^\d+(\.\d+)?$/;
        var num = document.getElementById("price").value;
        var name = document.getElementById("name").value;
        var type = document.getElementById("type").value;
        var provider = document.getElementById("provider").value;
        var unit = document.getElementById("unit").value;
        var number = document.getElementById("number").value;
        var signer = document.getElementById("signer").value;
        if ((name == "") || (type == "") || (number == "") || (num == "") || (unit == "") || (provider == "") || (signer == "")) {
            alert("信息未填写完整");
            return false;
        }
        if (!regPos.test(num)) {
            alert("价格输入错误");
            return false;                      
        }
        var sel = document.getElementById("cls");
        var sid = sel.selectedIndex;
        document.getElementById("name").value = document.getElementById("name").value + "(" + sel[sid].value + ")";
        return true;
    }
</script>
