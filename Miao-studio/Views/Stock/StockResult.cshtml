@model Tuple<List<Miao_studio.Models.StockResult>, List<Miao_studio.Models.StockResult> , Miao_studio.Models.SearchInfo>
@using Miao_studio.Models;
@{
    ViewBag.Title = "StockResult";
    string begin = "";
    string end = "";
    if (Model.Item3.begin != null)
    {
        begin = Model.Item3.begin.Value.ToString("yyyy-MM");
    }
    if (Model.Item3.end != null)
    {
        end = Model.Item3.end.Value.ToString("yyyy-MM");
    }
    List<StockExcel> res = new List<StockExcel>();
}

<h2>库存统计信息</h2>
<br />
<form action="/Stock/StockResult" method="get" accept-charset="UTF-8">    
    <div class="form-group">
        <label class="control-label col-md-2">名称：</label>
        <input name="name" class="form-control" value="@Model.Item3.name" />
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">型号：</label>
        <input name="type" class="form-control" value="@Model.Item3.type" />
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">开始月份：</label>
        <input type="month" name="begin" class="form-control" value="@begin" />
    </div>
    <div class="form-group">
        <label class="control-label col-md-2">结束月份：</label>
        <input type="month" name="end" class="form-control" value="@end" />
    </div>   
    <div class="form-group">
        <label class="control-label col-md-2"></label>
        <input type="submit" value="查询" class="btn btn-default form-control" style="background-color:skyblue" />
    </div>
</form>

<table class="table" style="table-layout:fixed">
    <tr>
        <th>
            <label>序号</label>
        </th>
        <th>
            <label>名称</label>
        </th>
        <th>
            <label>型号</label>
        </th>
        <th>
            <label>单位</label>
        </th>
        <th>
            <label>期初库存</label>
        </th>
        <th>
            <label>期初总金额</label>
        </th>
        <th>
            <label>期间入库数量</label>
        </th>
        <th>
            <label>期间入库金额</label>
        </th>
        <th>
            <label>期间出库数量</label>
        </th>
        <th>
            <label>期间出库金额</label>
        </th>
        <th>
            <label>期末库存</label>
        </th>
        <th>
            <label>期末总金额</label>
        </th>
        <th>
            <button class="btn btn-default" style="background-color:red" onclick="window.location = '/Stock/ExportStockExcel?begin=@begin&end=@end'">导出</button>
        </th>
    </tr>
</table>
<div style="overflow-y:scroll;height:500px">
    <table class="table" style="table-layout:fixed">
    @for (int i = 0; i < Model.Item1.Count; i++)
    {
        if((Model.Item1.ElementAt(i).stock == 0)&&((Model.Item1.ElementAt(i).dstock - Model.Item2.ElementAt(i).dstock)==0))
        {
            continue;
        }
    <tr>
        <td>
            <p>@(i + 1)</p>
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.Item1.ElementAt(i).name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.Item1.ElementAt(i).type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.Item1.ElementAt(i).unit)
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.Item1.ElementAt(i).stock)
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.Item1.ElementAt(i).total)
        </td>
        <td>
            <p>@(Model.Item1.ElementAt(i).dstock - Model.Item2.ElementAt(i).dstock)</p>
        </td>
        <td>
            <p>@(Model.Item2.ElementAt(i).total - Model.Item1.ElementAt(i).total + Model.Item1.ElementAt(i).dtotal - Model.Item2.ElementAt(i).dtotal)</p>
        </td>
        <td>
            <p>@(Model.Item1.ElementAt(i).dstock - Model.Item2.ElementAt(i).dstock - Model.Item2.ElementAt(i).stock + Model.Item1.ElementAt(i).stock)</p>
        </td>
        <td>
            <p>@(Model.Item1.ElementAt(i).dtotal - Model.Item2.ElementAt(i).dtotal)</p>
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.Item2.ElementAt(i).stock)
        </td>
        <td>
            @Html.DisplayFor(modelItem => Model.Item2.ElementAt(i).total)
        </td>
        <td></td>
    </tr>
        res.Add(new StockExcel(
            Model.Item1.ElementAt(i).name,
            Model.Item1.ElementAt(i).type,
            Model.Item1.ElementAt(i).unit,
            Model.Item1.ElementAt(i).stock,
            Model.Item1.ElementAt(i).total,
            Model.Item1.ElementAt(i).dstock - Model.Item2.ElementAt(i).dstock,
            Model.Item2.ElementAt(i).total - Model.Item1.ElementAt(i).total + Model.Item1.ElementAt(i).dtotal - Model.Item2.ElementAt(i).dtotal,
            Model.Item1.ElementAt(i).dstock - Model.Item2.ElementAt(i).dstock - Model.Item2.ElementAt(i).stock + Model.Item1.ElementAt(i).stock,
            Model.Item1.ElementAt(i).dtotal - Model.Item2.ElementAt(i).dtotal,
            Model.Item2.ElementAt(i).stock,
            Model.Item2.ElementAt(i).total));
    }

    </table>
</div>
@{ 
    Session["excel"] = res;
}


